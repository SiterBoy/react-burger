{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={ingredient:null};const ingredientDetailsSlice=createSlice({name:'ingredientDetails',initialState,reducers:{setIngredientDetails:(state,action)=>{state.ingredient=action.payload;},clearIngredientDetails:state=>{state.ingredient=null;}}});export const{setIngredientDetails,clearIngredientDetails}=ingredientDetailsSlice.actions;export default ingredientDetailsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","ingredient","ingredientDetailsSlice","name","reducers","setIngredientDetails","state","action","payload","clearIngredientDetails","actions","reducer"],"sources":["/Users/antonkaliberov/Desktop/Обучение реакт/Спринт 1 /react-burger/src/store/slices/ingredient-details-slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport IIngredientData from '../../types/interfaces/ingridient-data.interface';\n\ninterface IngredientDetailsState {\n  ingredient: IIngredientData | null;\n}\n\nconst initialState: IngredientDetailsState = {\n  ingredient: null,\n};\n\nconst ingredientDetailsSlice = createSlice({\n  name: 'ingredientDetails',\n  initialState,\n  reducers: {\n    setIngredientDetails: (state, action: PayloadAction<IIngredientData>) => {\n      state.ingredient = action.payload;\n    },\n    clearIngredientDetails: state => {\n      state.ingredient = null;\n    },\n  },\n});\n\nexport const { setIngredientDetails, clearIngredientDetails } =\n  ingredientDetailsSlice.actions;\n\nexport default ingredientDetailsSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAO7D,KAAM,CAAAC,YAAoC,CAAG,CAC3CC,UAAU,CAAE,IACd,CAAC,CAED,KAAM,CAAAC,sBAAsB,CAAGH,WAAW,CAAC,CACzCI,IAAI,CAAE,mBAAmB,CACzBH,YAAY,CACZI,QAAQ,CAAE,CACRC,oBAAoB,CAAEA,CAACC,KAAK,CAAEC,MAAsC,GAAK,CACvED,KAAK,CAACL,UAAU,CAAGM,MAAM,CAACC,OAAO,CACnC,CAAC,CACDC,sBAAsB,CAAEH,KAAK,EAAI,CAC/BA,KAAK,CAACL,UAAU,CAAG,IAAI,CACzB,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEI,oBAAoB,CAAEI,sBAAuB,CAAC,CAC3DP,sBAAsB,CAACQ,OAAO,CAEhC,cAAe,CAAAR,sBAAsB,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}