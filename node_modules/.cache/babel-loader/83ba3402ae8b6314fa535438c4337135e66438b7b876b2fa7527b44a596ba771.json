{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={orders:[],total:0,totalToday:0,wsConnected:false,error:null};const orderFeedSlice=createSlice({name:'orderFeed',initialState,reducers:{wsFeedStart:state=>{},wsFeedSuccess:state=>{state.wsConnected=true;state.error=null;},wsFeedError:(state,action)=>{var _action$payload;state.wsConnected=false;state.error=((_action$payload=action.payload)===null||_action$payload===void 0?void 0:_action$payload.message)||'WebSocket error';},wsFeedClosed:state=>{state.wsConnected=false;},wsFeedMessage:(state,action)=>{const{orders,total,totalToday}=action.payload;state.orders=orders||[];state.total=total||0;state.totalToday=totalToday||0;}}});export const{wsFeedStart,wsFeedSuccess,wsFeedError,wsFeedClosed,wsFeedMessage}=orderFeedSlice.actions;export default orderFeedSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","orders","total","totalToday","wsConnected","error","orderFeedSlice","name","reducers","wsFeedStart","state","wsFeedSuccess","wsFeedError","action","_action$payload","payload","message","wsFeedClosed","wsFeedMessage","actions","reducer"],"sources":["/Users/antonkaliberov/Desktop/Обучение реакт/Спринт 1 /react-burger/src/store/slices/order-feed-slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface Order {\n  _id: string;\n  number: number;\n  ingredients: string[];\n  status: 'created' | 'pending' | 'done';\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface OrderFeedState {\n  orders: Order[];\n  total: number;\n  totalToday: number;\n  wsConnected: boolean;\n  error: string | null;\n}\n\nconst initialState: OrderFeedState = {\n  orders: [],\n  total: 0,\n  totalToday: 0,\n  wsConnected: false,\n  error: null,\n};\n\nconst orderFeedSlice = createSlice({\n  name: 'orderFeed',\n  initialState,\n  reducers: {\n    wsFeedStart: (state) => {},\n    wsFeedSuccess: (state) => {\n      state.wsConnected = true;\n      state.error = null;\n    },\n    wsFeedError: (state, action: PayloadAction<any>) => {\n      state.wsConnected = false;\n      state.error = action.payload?.message || 'WebSocket error';\n    },\n    wsFeedClosed: (state) => {\n      state.wsConnected = false;\n    },\n    wsFeedMessage: (state, action: PayloadAction<any>) => {\n      const { orders, total, totalToday } = action.payload;\n      state.orders = orders || [];\n      state.total = total || 0;\n      state.totalToday = totalToday || 0;\n    },\n  },\n});\n\nexport const {\n  wsFeedStart,\n  wsFeedSuccess,\n  wsFeedError,\n  wsFeedClosed,\n  wsFeedMessage,\n} = orderFeedSlice.actions;\n\nexport default orderFeedSlice.reducer;\n\nexport type { Order }; "],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAmB7D,KAAM,CAAAC,YAA4B,CAAG,CACnCC,MAAM,CAAE,EAAE,CACVC,KAAK,CAAE,CAAC,CACRC,UAAU,CAAE,CAAC,CACbC,WAAW,CAAE,KAAK,CAClBC,KAAK,CAAE,IACT,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGP,WAAW,CAAC,CACjCQ,IAAI,CAAE,WAAW,CACjBP,YAAY,CACZQ,QAAQ,CAAE,CACRC,WAAW,CAAGC,KAAK,EAAK,CAAC,CAAC,CAC1BC,aAAa,CAAGD,KAAK,EAAK,CACxBA,KAAK,CAACN,WAAW,CAAG,IAAI,CACxBM,KAAK,CAACL,KAAK,CAAG,IAAI,CACpB,CAAC,CACDO,WAAW,CAAEA,CAACF,KAAK,CAAEG,MAA0B,GAAK,KAAAC,eAAA,CAClDJ,KAAK,CAACN,WAAW,CAAG,KAAK,CACzBM,KAAK,CAACL,KAAK,CAAG,EAAAS,eAAA,CAAAD,MAAM,CAACE,OAAO,UAAAD,eAAA,iBAAdA,eAAA,CAAgBE,OAAO,GAAI,iBAAiB,CAC5D,CAAC,CACDC,YAAY,CAAGP,KAAK,EAAK,CACvBA,KAAK,CAACN,WAAW,CAAG,KAAK,CAC3B,CAAC,CACDc,aAAa,CAAEA,CAACR,KAAK,CAAEG,MAA0B,GAAK,CACpD,KAAM,CAAEZ,MAAM,CAAEC,KAAK,CAAEC,UAAW,CAAC,CAAGU,MAAM,CAACE,OAAO,CACpDL,KAAK,CAACT,MAAM,CAAGA,MAAM,EAAI,EAAE,CAC3BS,KAAK,CAACR,KAAK,CAAGA,KAAK,EAAI,CAAC,CACxBQ,KAAK,CAACP,UAAU,CAAGA,UAAU,EAAI,CAAC,CACpC,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CACXM,WAAW,CACXE,aAAa,CACbC,WAAW,CACXK,YAAY,CACZC,aACF,CAAC,CAAGZ,cAAc,CAACa,OAAO,CAE1B,cAAe,CAAAb,cAAc,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}