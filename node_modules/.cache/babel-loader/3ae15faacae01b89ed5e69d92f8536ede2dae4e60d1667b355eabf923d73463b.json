{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import{request}from'../../utils/api';const initialState={items:[],loading:false,error:null,counters:{}};export const fetchIngredients=createAsyncThunk('ingredients/fetchIngredients',async()=>{const data=await request('/ingredients');return data.data;});const ingredientsSlice=createSlice({name:'ingredients',initialState,reducers:{incrementCounter:(state,action)=>{const id=action.payload;state.counters[id]=(state.counters[id]||0)+1;},decrementCounter:(state,action)=>{const id=action.payload;if(state.counters[id]>0){state.counters[id]--;}},resetCounters:state=>{state.counters={};}},extraReducers:builder=>{builder.addCase(fetchIngredients.pending,state=>{state.loading=true;state.error=null;}).addCase(fetchIngredients.fulfilled,(state,action)=>{state.loading=false;state.items=action.payload;state.counters={};}).addCase(fetchIngredients.rejected,(state,action)=>{state.loading=false;state.error=action.error.message||'Произошла ошибка при загрузке ингредиентов';});}});export const{incrementCounter,decrementCounter,resetCounters}=ingredientsSlice.actions;export default ingredientsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","request","initialState","items","loading","error","counters","fetchIngredients","data","ingredientsSlice","name","reducers","incrementCounter","state","action","id","payload","decrementCounter","resetCounters","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["/Users/antonkaliberov/Desktop/Обучение реакт/Спринт 1 /react-burger/src/store/slices/ingredients-slice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { request } from '../../utils/api';\nimport IIngredientData from '../../types/interfaces/ingridient-data.interface';\nimport { PayloadAction } from '@reduxjs/toolkit';\n\ninterface IngredientsState {\n  items: IIngredientData[];\n  loading: boolean;\n  error: string | null;\n  counters: Record<string, number>;\n}\n\nconst initialState: IngredientsState = {\n  items: [],\n  loading: false,\n  error: null,\n  counters: {},\n};\n\nexport const fetchIngredients = createAsyncThunk(\n  'ingredients/fetchIngredients',\n  async () => {\n    const data = await request<{ data: IIngredientData[] }>('/ingredients');\n    return data.data;\n  }\n);\n\nconst ingredientsSlice = createSlice({\n  name: 'ingredients',\n  initialState,\n  reducers: {\n    incrementCounter: (state, action: PayloadAction<string>) => {\n      const id = action.payload;\n      state.counters[id] = (state.counters[id] || 0) + 1;\n    },\n    decrementCounter: (state, action: PayloadAction<string>) => {\n      const id = action.payload;\n      if (state.counters[id] > 0) {\n        state.counters[id]--;\n      }\n    },\n    resetCounters: state => {\n      state.counters = {};\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(fetchIngredients.pending, state => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchIngredients.fulfilled, (state, action) => {\n        state.loading = false;\n        state.items = action.payload;\n        state.counters = {};\n      })\n      .addCase(fetchIngredients.rejected, (state, action) => {\n        state.loading = false;\n        state.error =\n          action.error.message || 'Произошла ошибка при загрузке ингредиентов';\n      });\n  },\n});\n\nexport const { incrementCounter, decrementCounter, resetCounters } =\n  ingredientsSlice.actions;\nexport default ingredientsSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,gBAAgB,KAAQ,kBAAkB,CAChE,OAASC,OAAO,KAAQ,iBAAiB,CAWzC,KAAM,CAAAC,YAA8B,CAAG,CACrCC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,IAAI,CACXC,QAAQ,CAAE,CAAC,CACb,CAAC,CAED,MAAO,MAAM,CAAAC,gBAAgB,CAAGP,gBAAgB,CAC9C,8BAA8B,CAC9B,SAAY,CACV,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,OAAO,CAA8B,cAAc,CAAC,CACvE,MAAO,CAAAO,IAAI,CAACA,IAAI,CAClB,CACF,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAGV,WAAW,CAAC,CACnCW,IAAI,CAAE,aAAa,CACnBR,YAAY,CACZS,QAAQ,CAAE,CACRC,gBAAgB,CAAEA,CAACC,KAAK,CAAEC,MAA6B,GAAK,CAC1D,KAAM,CAAAC,EAAE,CAAGD,MAAM,CAACE,OAAO,CACzBH,KAAK,CAACP,QAAQ,CAACS,EAAE,CAAC,CAAG,CAACF,KAAK,CAACP,QAAQ,CAACS,EAAE,CAAC,EAAI,CAAC,EAAI,CAAC,CACpD,CAAC,CACDE,gBAAgB,CAAEA,CAACJ,KAAK,CAAEC,MAA6B,GAAK,CAC1D,KAAM,CAAAC,EAAE,CAAGD,MAAM,CAACE,OAAO,CACzB,GAAIH,KAAK,CAACP,QAAQ,CAACS,EAAE,CAAC,CAAG,CAAC,CAAE,CAC1BF,KAAK,CAACP,QAAQ,CAACS,EAAE,CAAC,EAAE,CACtB,CACF,CAAC,CACDG,aAAa,CAAEL,KAAK,EAAI,CACtBA,KAAK,CAACP,QAAQ,CAAG,CAAC,CAAC,CACrB,CACF,CAAC,CACDa,aAAa,CAAEC,OAAO,EAAI,CACxBA,OAAO,CACJC,OAAO,CAACd,gBAAgB,CAACe,OAAO,CAAET,KAAK,EAAI,CAC1CA,KAAK,CAACT,OAAO,CAAG,IAAI,CACpBS,KAAK,CAACR,KAAK,CAAG,IAAI,CACpB,CAAC,CAAC,CACDgB,OAAO,CAACd,gBAAgB,CAACgB,SAAS,CAAE,CAACV,KAAK,CAAEC,MAAM,GAAK,CACtDD,KAAK,CAACT,OAAO,CAAG,KAAK,CACrBS,KAAK,CAACV,KAAK,CAAGW,MAAM,CAACE,OAAO,CAC5BH,KAAK,CAACP,QAAQ,CAAG,CAAC,CAAC,CACrB,CAAC,CAAC,CACDe,OAAO,CAACd,gBAAgB,CAACiB,QAAQ,CAAE,CAACX,KAAK,CAAEC,MAAM,GAAK,CACrDD,KAAK,CAACT,OAAO,CAAG,KAAK,CACrBS,KAAK,CAACR,KAAK,CACTS,MAAM,CAACT,KAAK,CAACoB,OAAO,EAAI,4CAA4C,CACxE,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEb,gBAAgB,CAAEK,gBAAgB,CAAEC,aAAc,CAAC,CAChET,gBAAgB,CAACiB,OAAO,CAC1B,cAAe,CAAAjB,gBAAgB,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}