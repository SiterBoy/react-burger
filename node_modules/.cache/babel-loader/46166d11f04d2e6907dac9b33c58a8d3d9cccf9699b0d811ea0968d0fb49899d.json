{"ast":null,"code":"import{getUser,refreshToken}from'../slices/user-slice';export const authMiddleware=store=>next=>async action=>{const result=next(action);if(action.type==='app/init'){const accessToken=localStorage.getItem('accessToken');const refreshTokenValue=localStorage.getItem('refreshToken');if(accessToken&&refreshTokenValue){try{await store.dispatch(getUser()).unwrap();}catch(error){const errorMessage=error instanceof Error?error.message:'Unknown error';if(errorMessage==='jwt expired'||errorMessage==='jwt malformed'||errorMessage==='invalid token'||errorMessage==='Token is invalid'||errorMessage!==null&&errorMessage!==void 0&&errorMessage.includes('jwt')||errorMessage!==null&&errorMessage!==void 0&&errorMessage.includes('invalid')){try{await store.dispatch(refreshToken()).unwrap();await store.dispatch(getUser()).unwrap();}catch(refreshError){localStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');}}else{localStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');}}}}return result;};","map":{"version":3,"names":["getUser","refreshToken","authMiddleware","store","next","action","result","type","accessToken","localStorage","getItem","refreshTokenValue","dispatch","unwrap","error","errorMessage","Error","message","includes","refreshError","removeItem"],"sources":["/Users/antonkaliberov/Desktop/Обучение реакт/Спринт 1 /react-burger/src/store/middleware/auth.ts"],"sourcesContent":["import { getUser, refreshToken } from '../slices/user-slice';\n\nexport const authMiddleware =\n  (store: any) => (next: any) => async (action: any) => {\n    const result = next(action);\n\n    if (action.type === 'app/init') {\n      const accessToken = localStorage.getItem('accessToken');\n      const refreshTokenValue = localStorage.getItem('refreshToken');\n\n      if (accessToken && refreshTokenValue) {\n        try {\n          await store.dispatch(getUser()).unwrap();\n        } catch (error: unknown) {\n          const errorMessage =\n            error instanceof Error ? error.message : 'Unknown error';\n\n          if (\n            errorMessage === 'jwt expired' ||\n            errorMessage === 'jwt malformed' ||\n            errorMessage === 'invalid token' ||\n            errorMessage === 'Token is invalid' ||\n            errorMessage?.includes('jwt') ||\n            errorMessage?.includes('invalid')\n          ) {\n            try {\n              await store.dispatch(refreshToken()).unwrap();\n              await store.dispatch(getUser()).unwrap();\n            } catch (refreshError) {\n              localStorage.removeItem('accessToken');\n              localStorage.removeItem('refreshToken');\n            }\n          } else {\n            localStorage.removeItem('accessToken');\n            localStorage.removeItem('refreshToken');\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n"],"mappings":"AAAA,OAASA,OAAO,CAAEC,YAAY,KAAQ,sBAAsB,CAE5D,MAAO,MAAM,CAAAC,cAAc,CACxBC,KAAU,EAAMC,IAAS,EAAK,KAAO,CAAAC,MAAW,EAAK,CACpD,KAAM,CAAAC,MAAM,CAAGF,IAAI,CAACC,MAAM,CAAC,CAE3B,GAAIA,MAAM,CAACE,IAAI,GAAK,UAAU,CAAE,CAC9B,KAAM,CAAAC,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACvD,KAAM,CAAAC,iBAAiB,CAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAE9D,GAAIF,WAAW,EAAIG,iBAAiB,CAAE,CACpC,GAAI,CACF,KAAM,CAAAR,KAAK,CAACS,QAAQ,CAACZ,OAAO,CAAC,CAAC,CAAC,CAACa,MAAM,CAAC,CAAC,CAC1C,CAAE,MAAOC,KAAc,CAAE,CACvB,KAAM,CAAAC,YAAY,CAChBD,KAAK,WAAY,CAAAE,KAAK,CAAGF,KAAK,CAACG,OAAO,CAAG,eAAe,CAE1D,GACEF,YAAY,GAAK,aAAa,EAC9BA,YAAY,GAAK,eAAe,EAChCA,YAAY,GAAK,eAAe,EAChCA,YAAY,GAAK,kBAAkB,EACnCA,YAAY,SAAZA,YAAY,WAAZA,YAAY,CAAEG,QAAQ,CAAC,KAAK,CAAC,EAC7BH,YAAY,SAAZA,YAAY,WAAZA,YAAY,CAAEG,QAAQ,CAAC,SAAS,CAAC,CACjC,CACA,GAAI,CACF,KAAM,CAAAf,KAAK,CAACS,QAAQ,CAACX,YAAY,CAAC,CAAC,CAAC,CAACY,MAAM,CAAC,CAAC,CAC7C,KAAM,CAAAV,KAAK,CAACS,QAAQ,CAACZ,OAAO,CAAC,CAAC,CAAC,CAACa,MAAM,CAAC,CAAC,CAC1C,CAAE,MAAOM,YAAY,CAAE,CACrBV,YAAY,CAACW,UAAU,CAAC,aAAa,CAAC,CACtCX,YAAY,CAACW,UAAU,CAAC,cAAc,CAAC,CACzC,CACF,CAAC,IAAM,CACLX,YAAY,CAACW,UAAU,CAAC,aAAa,CAAC,CACtCX,YAAY,CAACW,UAAU,CAAC,cAAc,CAAC,CACzC,CACF,CACF,CACF,CAEA,MAAO,CAAAd,MAAM,CACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}