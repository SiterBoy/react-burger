{"ast":null,"code":"import{useDispatch,useSelector}from'react-redux';import{useState}from'react';export const useAppDispatch=()=>useDispatch();export const useAppSelector=useSelector;export function useForm(inputValues){const[values,setValues]=useState(inputValues);const handleChange=event=>{const{value,name}=event.target;setValues({...values,[name]:value});};return{values,handleChange,setValues};}","map":{"version":3,"names":["useDispatch","useSelector","useState","useAppDispatch","useAppSelector","useForm","inputValues","values","setValues","handleChange","event","value","name","target"],"sources":["/Users/antonkaliberov/Desktop/Обучение реакт/Спринт 1 /react-burger/src/store/hooks.ts"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState } from './types';\nimport type { AppDispatch } from './store';\nimport { useState } from 'react';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport function useForm<T extends Record<string, any>>(inputValues: T) {\n  const [values, setValues] = useState<T>(inputValues);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  return { values, handleChange, setValues };\n}\n"],"mappings":"AAAA,OAA+BA,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAG5E,OAASC,QAAQ,KAAQ,OAAO,CAEhC,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAMH,WAAW,CAAc,CAAC,CAC9D,MAAO,MAAM,CAAAI,cAA+C,CAAGH,WAAW,CAE1E,MAAO,SAAS,CAAAI,OAAOA,CAAgCC,WAAc,CAAE,CACrE,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGN,QAAQ,CAAII,WAAW,CAAC,CAEpD,KAAM,CAAAG,YAAY,CAAIC,KAA0C,EAAK,CACnE,KAAM,CAAEC,KAAK,CAAEC,IAAK,CAAC,CAAGF,KAAK,CAACG,MAAM,CACpCL,SAAS,CAAC,CAAE,GAAGD,MAAM,CAAE,CAACK,IAAI,EAAGD,KAAM,CAAC,CAAC,CACzC,CAAC,CAED,MAAO,CAAEJ,MAAM,CAAEE,YAAY,CAAED,SAAU,CAAC,CAC5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}