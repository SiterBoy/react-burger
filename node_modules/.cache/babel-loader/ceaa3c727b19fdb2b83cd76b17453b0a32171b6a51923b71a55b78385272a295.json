{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import{request}from'../../utils/api';const initialState={user:null,loading:false,error:null,isAuth:false};export const registerUser=createAsyncThunk('user/register',async(_ref,thunkAPI)=>{let{email,password,name}=_ref;const res=await request('/auth/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password,name})});localStorage.setItem('accessToken',res.accessToken.replace(/^Bearer /,''));localStorage.setItem('refreshToken',res.refreshToken);return res.user;});export const loginUser=createAsyncThunk('user/login',async(_ref2,thunkAPI)=>{let{email,password}=_ref2;const res=await request('/auth/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});localStorage.setItem('accessToken',res.accessToken.replace(/^Bearer /,''));localStorage.setItem('refreshToken',res.refreshToken);return res.user;});export const logoutUser=createAsyncThunk('user/logout',async(_,thunkAPI)=>{await request('/auth/logout',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({token:localStorage.getItem('refreshToken')})});localStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');});export const refreshToken=createAsyncThunk('user/refreshToken',async(_,thunkAPI)=>{const res=await request('/auth/token',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({token:localStorage.getItem('refreshToken')})});localStorage.setItem('accessToken',res.accessToken.replace(/^Bearer /,''));localStorage.setItem('refreshToken',res.refreshToken);return res;});export const getUser=createAsyncThunk('user/getUser',async(_,thunkAPI)=>{const res=await request('/auth/user',{method:'GET'});return res.user;});export const updateUser=createAsyncThunk('user/updateUser',async(data,thunkAPI)=>{const res=await request('/auth/user',{method:'PATCH',body:JSON.stringify(data)});return res.user;});const userSlice=createSlice({name:'user',initialState,reducers:{},extraReducers:builder=>{builder.addCase(registerUser.pending,state=>{state.loading=true;state.error=null;}).addCase(registerUser.fulfilled,(state,action)=>{state.loading=false;state.user=action.payload;state.isAuth=true;}).addCase(registerUser.rejected,(state,action)=>{state.loading=false;state.error=action.error.message||'Ошибка регистрации';}).addCase(loginUser.pending,state=>{state.loading=true;state.error=null;}).addCase(loginUser.fulfilled,(state,action)=>{state.loading=false;state.user=action.payload;state.isAuth=true;}).addCase(loginUser.rejected,(state,action)=>{state.loading=false;state.error=action.error.message||'Ошибка авторизации';}).addCase(logoutUser.fulfilled,state=>{state.user=null;state.isAuth=false;}).addCase(getUser.pending,state=>{state.loading=true;state.error=null;}).addCase(getUser.fulfilled,(state,action)=>{state.loading=false;state.user=action.payload;state.isAuth=true;}).addCase(getUser.rejected,(state,action)=>{var _action$error$message,_action$error$message2,_action$error$message3;state.loading=false;state.error=action.error.message||'Ошибка получения пользователя';if((_action$error$message=action.error.message)!==null&&_action$error$message!==void 0&&_action$error$message.includes('jwt')||(_action$error$message2=action.error.message)!==null&&_action$error$message2!==void 0&&_action$error$message2.includes('invalid')||(_action$error$message3=action.error.message)!==null&&_action$error$message3!==void 0&&_action$error$message3.includes('Token')){state.user=null;state.isAuth=false;}}).addCase(updateUser.pending,state=>{state.loading=true;state.error=null;}).addCase(updateUser.fulfilled,(state,action)=>{state.loading=false;state.user=action.payload;}).addCase(updateUser.rejected,(state,action)=>{state.loading=false;state.error=action.error.message||'Ошибка обновления пользователя';});}});export default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","request","initialState","user","loading","error","isAuth","registerUser","_ref","thunkAPI","email","password","name","res","method","headers","body","JSON","stringify","localStorage","setItem","accessToken","replace","refreshToken","loginUser","_ref2","logoutUser","_","token","getItem","removeItem","getUser","updateUser","data","userSlice","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","_action$error$message","_action$error$message2","_action$error$message3","includes","reducer"],"sources":["/Users/antonkaliberov/Desktop/Обучение реакт/Спринт 1 /react-burger/src/store/slices/user-slice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { request } from '../../utils/api';\n\ninterface UserState {\n  user: { email: string; name: string } | null;\n  loading: boolean;\n  error: string | null;\n  isAuth: boolean;\n}\n\nconst initialState: UserState = {\n  user: null,\n  loading: false,\n  error: null,\n  isAuth: false,\n};\n\nexport const registerUser = createAsyncThunk(\n  'user/register',\n  async (\n    {\n      email,\n      password,\n      name,\n    }: { email: string; password: string; name: string },\n    thunkAPI\n  ) => {\n    const res = await request<{\n      user: { email: string; name: string };\n      accessToken: string;\n      refreshToken: string;\n    }>('/auth/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, password, name }),\n    });\n    localStorage.setItem(\n      'accessToken',\n      res.accessToken.replace(/^Bearer /, '')\n    );\n    localStorage.setItem('refreshToken', res.refreshToken);\n    return res.user;\n  }\n);\n\nexport const loginUser = createAsyncThunk(\n  'user/login',\n  async (\n    { email, password }: { email: string; password: string },\n    thunkAPI\n  ) => {\n    const res = await request<{\n      user: { email: string; name: string };\n      accessToken: string;\n      refreshToken: string;\n    }>('/auth/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, password }),\n    });\n    localStorage.setItem(\n      'accessToken',\n      res.accessToken.replace(/^Bearer /, '')\n    );\n    localStorage.setItem('refreshToken', res.refreshToken);\n    return res.user;\n  }\n);\n\nexport const logoutUser = createAsyncThunk(\n  'user/logout',\n  async (_, thunkAPI) => {\n    await request('/auth/logout', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ token: localStorage.getItem('refreshToken') }),\n    });\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n  }\n);\n\nexport const refreshToken = createAsyncThunk(\n  'user/refreshToken',\n  async (_, thunkAPI) => {\n    const res = await request<{ accessToken: string; refreshToken: string }>(\n      '/auth/token',\n      {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ token: localStorage.getItem('refreshToken') }),\n      }\n    );\n    localStorage.setItem(\n      'accessToken',\n      res.accessToken.replace(/^Bearer /, '')\n    );\n    localStorage.setItem('refreshToken', res.refreshToken);\n    return res;\n  }\n);\n\nexport const getUser = createAsyncThunk('user/getUser', async (_, thunkAPI) => {\n  const res = await request<{ user: { email: string; name: string } }>(\n    '/auth/user',\n    {\n      method: 'GET',\n    }\n  );\n  return res.user;\n});\n\nexport const updateUser = createAsyncThunk(\n  'user/updateUser',\n  async (\n    data: { name: string; email: string; password?: string },\n    thunkAPI\n  ) => {\n    const res = await request<{ user: { email: string; name: string } }>(\n      '/auth/user',\n      {\n        method: 'PATCH',\n        body: JSON.stringify(data),\n      }\n    );\n    return res.user;\n  }\n);\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(registerUser.pending, state => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(registerUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n        state.isAuth = true;\n      })\n      .addCase(registerUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || 'Ошибка регистрации';\n      })\n      .addCase(loginUser.pending, state => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n        state.isAuth = true;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || 'Ошибка авторизации';\n      })\n      .addCase(logoutUser.fulfilled, state => {\n        state.user = null;\n        state.isAuth = false;\n      })\n      .addCase(getUser.pending, state => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(getUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n        state.isAuth = true;\n      })\n      .addCase(getUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || 'Ошибка получения пользователя';\n        if (\n          action.error.message?.includes('jwt') ||\n          action.error.message?.includes('invalid') ||\n          action.error.message?.includes('Token')\n        ) {\n          state.user = null;\n          state.isAuth = false;\n        }\n      })\n      .addCase(updateUser.pending, state => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(updateUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n      })\n      .addCase(updateUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || 'Ошибка обновления пользователя';\n      });\n  },\n});\n\nexport default userSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}